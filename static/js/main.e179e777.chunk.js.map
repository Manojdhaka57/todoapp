{"version":3,"sources":["images/todo.svg","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","className","src","todo","alt","type","value","onChange","e","target","placeholder","title","onClick","newEditItem","find","edititem","index","updateItem","filter","deleteitem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,MAA0B,iC,OCgG1BA,EA5FJ,WACP,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAuCJ,oBAAS,GAAhD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAmBC,EAAnB,KACMC,EAAQ,WACV,GAAIR,EAIC,GAAGA,IAAcI,EACpBD,EACED,EAAMO,KAAI,SAACC,GACT,OAAGA,EAAKC,KAAKL,EACJ,2BAAII,GAAX,IAAiBE,KAAKZ,IAEjBU,MAKXL,GAAgB,GAChBJ,EAAa,IACbM,EAAc,UAEZ,CACF,IAAMM,EAAc,CAACF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAKZ,GAC7DG,EAAS,CAACU,GAAF,mBAAkBX,KAC1BD,EAAa,SArBfgB,MAAM,qBA0Cd,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,6EAEF,sBAAKH,UAAU,WAAf,UACE,uBAAOI,KAAK,OACRC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAKxB,EAAawB,EAAEC,OAAOH,QACrCI,YAAY,gCAEVvB,EAAa,mBAAGc,UAAU,qBAAqBU,MAAM,WAAWC,QAASrB,IACzE,mBAAGU,UAAU,qBAAqBU,MAAM,cAAcC,QAASrB,OAGvE,sBAAKU,UAAU,YAAf,UAEMhB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKQ,UAAU,WAAf,UACI,6BAAKR,EAAKE,OACV,sBAAKM,UAAU,WAAf,UACE,mBAAGA,UAAU,qBAAqBU,MAAM,YAAYC,QAAS,kBAjCxE,SAAClB,GACd,IAAImB,EAAc5B,EAAM6B,MAAK,SAACrB,GAC5B,OAAOA,EAAKC,KAAKA,KAEnBN,GAAgB,GAChBJ,EAAa6B,EAAYlB,MACzBL,EAAcI,GA2B2EqB,CAAStB,EAAKC,OAC/E,mBAAGO,UAAU,0BAA0BU,MAAM,cAAcC,QAAS,kBA3C7E,SAACI,GACd,IAAMC,EAAYhC,EAAMiC,QAAO,SAACzB,GAC5B,OAAOA,EAAKC,KAAKsB,KAErB9B,EAAS+B,GAuCqFE,CAAW1B,EAAKC,YAJ/DD,EAAKC,OAUhD,qBAAKO,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAemB,oBAAkB,aAAaR,QA5C5D,WACZ1B,EAAS,KA2CD,SAAqF,6DC1EtFmC,EARL,WACR,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e179e777.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.eed43501.svg\";","import React ,{useState}from 'react';\r\nimport todo from '../images/todo.svg';\r\n\r\n\r\nconst Todo=()=> {\r\n    const [inputData , setInputData]=useState('');\r\n    const [items ,setItems]=useState([]);\r\n    const [toggleSubmit, setToggleSubmit]= useState(true);\r\n    const [isEditItem, setIsEditItem]=useState(null);\r\n    const addItem=()=>{\r\n        if(!inputData){\r\n          alert(\"please fill data\")\r\n\r\n        }\r\n        else if(inputData && !toggleSubmit){\r\n          setItems(\r\n            items.map((elem)=>{\r\n              if(elem.id===isEditItem){\r\n                return {...elem, name:inputData};\r\n              }\r\n              return elem;\r\n            })\r\n            \r\n            \r\n          )\r\n          setToggleSubmit(true);\r\n          setInputData('');\r\n          setIsEditItem(null);\r\n        }\r\n        else{\r\n          const allInputData= {id: new Date().getTime().toString(), name:inputData};\r\n            setItems([allInputData,...items]);\r\n            setInputData(\"\");\r\n        }\r\n        \r\n    }\r\n    const deleteitem=(index)=>{\r\n        const updateItem= items.filter((elem)=>{\r\n            return elem.id!==index;\r\n        });\r\n        setItems(updateItem)\r\n    }\r\n    const removeAll=()=>{\r\n        setItems([]);\r\n    }\r\n    const edititem=(id)=>{\r\n      let newEditItem = items.find((elem)=>{\r\n        return elem.id===id;\r\n      });\r\n      setToggleSubmit(false);\r\n      setInputData(newEditItem.name);\r\n      setIsEditItem(id);\r\n    }\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src={todo} alt=\"todologo\"></img>\r\n            <figcaption>Add Your List Here ✍️ </figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input type=\"text\" \r\n                value={inputData}\r\n                onChange={(e)=>setInputData(e.target.value)}\r\n                placeholder=\" ✍️ add item.....\"/>\r\n                {\r\n                  toggleSubmit?<i className=\"fa fa-plus add-btn\" title=\"add item\" onClick={addItem}></i>:\r\n                  <i className=\"far fa-edit addbtn\" title=\"update item\" onClick={addItem}></i>\r\n                }\r\n          </div>\r\n          <div className=\"showItems\">\r\n            {\r\n                items.map((elem)=>{\r\n                    return (\r\n                        <div className=\"eachItem\" key={elem.id}>\r\n                            <h3>{elem.name}</h3>\r\n                            <div className=\"todo-btn\">\r\n                              <i className=\"far fa-edit addbtn\" title=\"edit Item\" onClick={()=>edititem(elem.id)}></i>\r\n                              <i className=\"far fa-trash-alt addbtn\" title=\"Delete Item\" onClick={()=>deleteitem(elem.id)}></i>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                })      \r\n            }\r\n            <div className=\"showItems\">\r\n                <button className=\"btn effect04\" data-sm-link-text=\"REMOVE ALL\" onClick={removeAll }><span>CHECK LIST</span></button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport './App.css';\nimport Todo from './components/todo';\n\nconst App=()=> {\n  return (\n    <>\n      <Todo/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}